services:
  nats-server:
    image: nats:latest
    ports:
      - 8222:8222

  client-gateway:
    image: client-gateway:latest
    build: ./client-gateway
    ports:
      - ${CLIENT_GATEWAY_PORT}:${CLIENT_GATEWAY_PORT}
    volumes:
      - ./client-gateway/src:/usr/src/app/src
    command: npm run start:dev
    environment:
      - PORT=3000
      - NATS_SERVERS=${NATS_SERVER_URL}

  products-ms:
    build: ./products-ms
    image: products-ms:latest
    volumes:
      - ./products-ms/src:/usr/src/app/src
    command: npm run start:dev
    environment:
      - PORT=3001
      - NATS_SERVERS=${NATS_SERVER_URL}
      - DATABASE_URL=file:./dev.db

  orders-ms:
    build: ./orders-ms
    image: orders-ms:latest
    volumes:
      - ./orders-ms/src:/usr/src/app/src
    command: npm run start:dev
    environment:
      - PORT=3002
      - NATS_SERVERS=${NATS_SERVER_URL}
      - DATABASE_URL=${ORDERS_MS_DB_URL}
    depends_on:
      - orders-ms-db

  orders-ms-db:
    image: postgres:16.2
    container_name: orders-db
    restart: always
    environment:
      POSTGRES_USER: ${ORDERS_MS_DB_USER}
      POSTGRES_PASSWORD: ${ORDERS_MS_DB_PASSWORD}
      POSTGRES_DB: ${ORDERS_MS_DB}
    ports:
      - ${ORDERS_MS_DB_PORT}:${ORDERS_MS_DB_PORT}
    volumes:
      - ./orders-ms/postgres:/var/lib/postgresql/data

  payments-ms:
    container_name: payments-ms
    build: ./payments-ms
    image: payments-ms:latest
    volumes:
      - ./payments-ms/src:/usr/src/app/src
    command: npm run start:dev
    ports:
      - ${PAYMENTS_MS_PORT}:${PAYMENTS_MS_PORT}
    environment:
      - PORT=${PAYMENTS_MS_PORT}
      - STRIPE_SECRET_KEY=${PAYMENTS_MS_STRIPE_SECRET}
      - STRIPER_WEBHOOK_SECRET=${PAYMENTS_MS_STRIPE_WEBHOOK_SECRET}
      - STRIPE_SUCCESS_URL=${PAYMENTS_MS_STRIPE_SUCCESS_URL}
      - STRIPE_CANCEL_URL=${PAYMENTS_MS_STRIPE_CANCEL_URL}
      - NATS_SERVERS=nats:${NATS_SERVER_URL}
